From a250b5861ac2f4ec7132f5d1fc2659774bb94a4c Mon Sep 17 00:00:00 2001
From: minaripenguin <minaripenguin@users.noreply.github.com>
Date: Wed, 27 Dec 2023 11:36:22 +0800
Subject: [PATCH] services: Implement exit app animation boost

original change by: mnri

committer: rmp

pre-approved by: mnri

Signed-off-by: minaripenguin <minaripenguin@users.noreply.github.com>
---
 .../java/com/android/server/wm/TaskFragment.java    | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/services/core/java/com/android/server/wm/TaskFragment.java b/services/core/java/com/android/server/wm/TaskFragment.java
index 5d019122d52e1..210b72c3ae46f 100644
--- a/services/core/java/com/android/server/wm/TaskFragment.java
+++ b/services/core/java/com/android/server/wm/TaskFragment.java
@@ -86,7 +86,9 @@
 import android.graphics.Point;
 import android.graphics.Rect;
 import android.hardware.HardwareBuffer;
+import android.hardware.power.Boost;
 import android.os.IBinder;
+import android.os.PowerManagerInternal;
 import android.os.UserHandle;
 import android.util.DisplayMetrics;
 import android.util.Slog;
@@ -102,6 +104,7 @@
 
 import com.android.internal.annotations.VisibleForTesting;
 import com.android.internal.protolog.common.ProtoLog;
+import com.android.server.LocalServices;
 import com.android.server.am.HostingRecord;
 import com.android.server.pm.pkg.AndroidPackage;
 import com.android.window.flags.Flags;
@@ -1424,6 +1427,9 @@ final boolean resumeTopActivity(ActivityRecord prev, ActivityOptions options,
                 dc.prepareAppTransition(TRANSIT_NONE);
             } else {
                 dc.prepareAppTransition(TRANSIT_OPEN);
+                if (next != null) {
+                    doActivityBoost();
+                }
             }
         }
 
@@ -1618,6 +1624,13 @@ final boolean resumeTopActivity(ActivityRecord prev, ActivityOptions options,
         return true;
     }
 
+    protected void doActivityBoost() {
+        PowerManagerInternal mPowerManagerInternal = LocalServices.getService(PowerManagerInternal.class);
+        if (mPowerManagerInternal != null) {
+            mPowerManagerInternal.setPowerBoost(Boost.DISPLAY_UPDATE_IMMINENT, 80);
+        }
+    }
+
     boolean shouldSleepOrShutDownActivities() {
         return shouldSleepActivities() || mAtmService.mShuttingDown;
     }
